script.
    window.addEventListener('load', () => {
        const changeContent = (content) => {
            if (content === '') return content;

            const replacements = [
                {regex: /<img.*?src="(.*?)"?[^\>]+>/ig, replacement: '[图片]'},
                {regex: /<a[^>]+?href=["']?([^"']+)["']?[^>]*>([^<]+)<\/a>/gi, replacement: '[链接]'},
                {regex: /<pre><code>.*?<\/pre>/gi, replacement: '[代码]'},
                {regex: /<[^>]+>/g, replacement: ""}
            ];

            content = replacements.reduce((str, {regex, replacement}) => str.replace(regex, replacement), content);

            return content.length > 150 ? content.substring(0, 150) + '...' : content;
        }

        const $asideList = document.querySelector('#card-newest-comments .aside-list')
        const newestCommentInit = () => {
            const data = saveToLocal.get('waline-newest-comment')
            if (data) {
                generateHtml(JSON.parse(data))
            } else {
                getComment()
            }
        }

        const getComment = async () => {
            try {
                const res = await fetch('!{theme.comment.waline.envId}/api/comment?type=recent&count=8', {method: 'GET'})
                const result = await res.json()
                const walineArray = result.data.map(e => {
                    return {
                        'content': changeContent(e.comment),
                        'avatar': e.avatar,
                        'nick': e.nick,
                        'url': e.url + '#' + e.objectId,
                        'date': e.time || e.insertedAt
                    }
                })
                saveToLocal.set('waline-newest-comment', JSON.stringify(walineArray), !{theme.comment.newest_comment.storage} / (60 * 24))
                generateHtml(walineArray)
            } catch (err) {
                console.error(err)
                $asideList.textContent = "!{_p('newest_comment.error')}"
            }
        }

        const generateHtml = array => {
            const $dom = document.querySelector('#card-newest-comments .aside-list')
            $dom.innerHTML = array.length ? array.map(item => `
                <div class='aside-list-item'>
                  <a onclick='pjax.loadUrl("${item.url}")' class='thumbnail'>
                    <img src='${item.avatar}' alt='${item.nick}'>
                    <div class='name'><span>${item.nick}</span></div>
                  </a>
                  <div class='content'>
                    <a class='comment' onclick='pjax.loadUrl("${item.url}")'>${item.content}</a>
                    <time class="datetime" datetime="${item.date}"></time>
                  </div>
                </div>
              `).join('') : "!{_p('newest_comment.zero')}"
            window.lazyLoadInstance && window.lazyLoadInstance.update()
            window.pjax && window.pjax.refresh()
            sco && sco.changeTimeFormat(document.querySelectorAll('.aside-list-item time'))
        }

        newestCommentInit()
    })